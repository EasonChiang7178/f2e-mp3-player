{"version":3,"sources":["webpack:///./src/components/Greeting.js","webpack:///./src/pages/index.js","webpack:///./src/layouts/SEO.js"],"names":["Wrapper","styled","div","_templateObject","Header","h2","_templateObject2","Greeting","curHour","greetingText","react_default","a","createElement","Container","pages_templateObject","YELLOW_3","IndexPage","SEO","title","components_Greeting","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"wiBAGA,IAAMA,EAAUC,UAAOC,IAAVC,KASPC,EAASH,UAAOI,GAAVC,KAiCGC,EAxBE,WACf,IAA4BC,EAYtBC,GAXA,GAAKD,GAAWA,EAAU,GACrB,eACE,IAAMA,GAAWA,EAAU,EAC7B,iBAEA,gBAMiC,UAE5C,OACEE,EAAAC,EAAAC,cAACZ,EAAD,KACEU,EAAAC,EAAAC,cAACR,EAAD,KACGK,8MChCT,IAAMI,EAAYZ,UAAOC,IAAVY,IAGCC,KAWDC,UARG,kBAChBN,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,MAAM,iBAEXR,EAAAC,EAAAC,cAACO,EAAD,yFCLJ,SAASF,EAATG,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAlB,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,eAAgB,CACdT,QAEFJ,MAAOA,EACPc,cAAa,KACbT,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAShB,GAEX,CACEe,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfN,EAAIqB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUEJ","file":"component---src-pages-index-js-f27c5dc231ecd6af263b.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n  padding-top: 19px;\n  margin-bottom: 29px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  opacity: .85;\n`\n\nconst Header = styled.h2`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 26px;\n  line-height: 32px;\n  color: white;\n  font-family: \"Helvetica Neue\";\n`\n\nconst Greeting = () => {\n  const getGreetingMessage = (curHour) => {\n    if (5 <= curHour && curHour < 12) {\n      return \"Good morning\"\n    } else if (12 <= curHour && curHour < 5) {\n      return \"Good afternoon\"\n    } else {\n      return \"Good evening\"\n    }\n  }\n  // [TODO] to get the real user name after login\n  const getUserName = () => \"Guest\"\n\n  const greetingText = getGreetingMessage() + \", \" + getUserName()\n\n  return (\n    <Wrapper>\n      <Header>\n        {greetingText}\n      </Header>\n    </Wrapper>\n  )\n}\n\nexport default Greeting\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Greeting from \"../components/Greeting\"\nimport SEO from \"../layouts/SEO\"\nimport { YELLOW_3 } from \"../constants/COLORS\"\n\nconst Container = styled.div`\n  padding: 30px 30px 0;\n  height: calc(100% - 30px);\n  background: ${YELLOW_3};\n`\n\nconst IndexPage = () => (\n  <Container>\n    <SEO title=\"Music Player\" />\n\n    <Greeting />\n  </Container>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}